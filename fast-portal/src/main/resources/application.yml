#app
server:
  port: 8989
#  context-path: /springboot-fast

spring:

  http:
    multipart:
      enabled: true
      file-size-threshold: 5MB
      max-file-size: 20MB
      
##################### springboot 整合 rabbitmq  ################################      
#  rabbitmq:
#    host: 192.168.211.132
#    port: 5672
#    username: guest
#    password: guest
#    publisher-confirms: true #支持发布确认
#    publisher-returns: true #支持发布返回
#    listener:
#      simple:
#        acknowledge-mode: manual #采用手动应答
#        concurrency: 1 #指定最小的消费者数量
#        max-concurrency: 1 #指定最大的消费者数量
#        retry:
#          enabled: true #是否支持重试
##################### springboot 整合rabbitmq  ################################



##################### springboot 整合 mysql数据库  ################################
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/springboot-fast?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: root
##################### springboot 整合 mysql数据库  ################################


###################### springboot 整合 mysql 多数据源  ################################
#使用 @DS 切换数据源。
#没有 @DS 主库
#@DS("slave")  存在slave指定slave，不存在主库
#  datasource:
#    dynamic:
#      force-master: false #遇到事物强制主库，默认值就为true。 如果有事物@Transactional 就始终用主库
#      master:
#        username: root
#        password: root
#        driver-class-name: com.mysql.jdbc.Driver
#        url: jdbc:mysql://127.0.0.1:3306/springboot-fast?useUnicode=true&characterEncoding=utf-8&useSSL=false
#        druid:
#          #初始化时建立物理连接的个数
#          initial-size: 10
#          #最大连接池数量
#          max-active: 20
#          #最小空闲连接数
#          min-idle: 10
#          #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#          time-between-eviction-runs-millis: 60000
#          #配置一个连接在池中最小生存的时间，单位是毫秒
#          min-evictable-idle-time-millis: 300000
#          #用来检测连接是否有效的sql，要求是一个查询语句。 
#          validation-query: SELECT 'x'
#          #申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis， 执行validationQuery检测连接是否有效。
#          test-while-idle: true
#          #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
#          test-on-borrow: false
#          #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
#          test-on-return: false
#      slave:
#        one:
#          username: root
#          password: root
#          driver-class-name: com.mysql.jdbc.Driver
#          url: jdbc:mysql://127.0.0.1:3306/springboot-fast?useUnicode=true&characterEncoding=utf-8&useSSL=false
#          druid:
#            #初始化时建立物理连接的个数
#            initial-size: 10
#            #最大连接池数量
#            max-active: 20
#            #最小空闲连接数
#            min-idle: 10
#            #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#            time-between-eviction-runs-millis: 60000
#            #配置一个连接在池中最小生存的时间，单位是毫秒
#            min-evictable-idle-time-millis: 300000
#            #用来检测连接是否有效的sql，要求是一个查询语句。 
#            validation-query: SELECT 'x'
#            #申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis， 执行validationQuery检测连接是否有效。
#            test-while-idle: true
#            #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
#            test-on-borrow: false
#            #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
#            test-on-return: false 
####################### springboot 整合 mysql 多数据源  ################################          


#################### springboot 整合 druid 配置  ################################
    druid:
      #初始化时建立物理连接的个数
      initial-size: 10
      #最大连接池数量
      max-active: 20
      #最小空闲连接数
      min-idle: 10
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      #配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      #用来检测连接是否有效的sql，要求是一个查询语句。 
      validation-query: SELECT 'x'
      #申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis， 执行validationQuery检测连接是否有效。
      test-while-idle: true
      #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-return: false
#################### springboot 整合 druid 配置  ################################      

########################## Freemarker  ##########################################
  freemarker:
    template-loader-path: classpath:/templates/
    cache: false
    charset: UTF-8
    check-template-location: true
    content-type: text/html
    expose-request-attributes: true
    expose-session-attributes: true
    request-context-attribute: request
    suffix: .html
########################## Freemarker  ##########################################    
    
    
########################## mybatis-plus ##########################################
mybatis-plus:
  mapper-locations: classpath:/mapper/*/*Mapper.xml,classpath:/mapper/*/*/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.cctc.fast.portal.system.entity
  typeEnumsPackage: com.cctc.fast.common.enums
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 2
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 0
    logic-not-delete-value: 1
    #自定义sql注入器,不在推荐使用此方式进行配置,请使用自定义bean注入
#    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现,不在推荐使用此方式进行配置,请使用自定义bean注入
    #meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效
    sql-parser-cache: false
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
########################## mybatis-plus ##########################################

logging:
  config: classpath:logback-spring.xml
  
  
########################## 七牛云存储 ##########################################  
qiniu:
   accessKey: jrbUIlTrsz0uJKZURnFSVfm_lgW19pF_nDdwlL8I
   secretKey: q328mA7Qp75CLTzUagEgiX6Cmf4ky_5qWGVpRdvG
   bucket: springboot-fast
   cdnPrefix: cdn  
########################## 七牛云存储 ##########################################   

########################## uncode schedule 任务调度 ##########################################   
uncode:
  schedule:
    zk-connect: 127.0.0.1:2181
    root-path: /cctc
    zk-session-timeout: 60000
    zk-username:
    #是否启动调度任务 默认启动 true 不启动false
    is-start-schedule: false
########################## uncode schedule 任务调度 ##########################################  

